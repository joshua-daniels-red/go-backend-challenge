name: CI/CD - ch-5

on:
  push:
    paths:
      - 'ch-5/**'
  pull_request:
    paths:
      - 'ch-5/**'

jobs:
  test-lint:
    name: Test, Lint, Format
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ch-5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | \
            sh -s -- -b $(go env GOPATH)/bin v1.54.2

      - name: Run golangci-lint
        run: $(go env GOPATH)/bin/golangci-lint run ./...

      - name: Run go vet
        run: go vet ./...

      - name: Check gofmt
        run: |
          test -z "$(gofmt -l .)" || (echo "Code not formatted" && exit 1)

      - name: Run unit tests with coverage
        run: |
          go test ./... -coverprofile=coverage.out
          go tool cover -func=coverage.out

  docker:
    name: Build & Push Docker Images
    needs: test-lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ch-5

    strategy:
      matrix:
        service: [consumer, producer]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and Push ${{ matrix.service }} Image
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/ch5-${{ matrix.service }}:latest
          DOCKERFILE=Dockerfile.${{ matrix.service }}
          docker build -f $DOCKERFILE -t $IMAGE .
          docker push $IMAGE
