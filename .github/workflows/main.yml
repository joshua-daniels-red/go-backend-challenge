name: CI/CD - ch-4

on:
  push:
    branches: [ "main" ]
    paths:
      - "ch-4/**"
      - ".github/workflows/main.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "ch-4/**"
      - ".github/workflows/main.yml"

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    services:
      cassandra:
        image: cassandra:4.1
        ports:
          - 9042:9042
        options: >-
          --health-cmd="cqlsh -e 'describe keyspaces'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-ch4-${{ hashFiles('**/ch-4/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-ch4-


      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Wait for Cassandra to be healthy
        run: |
          for i in {1..20}; do
            if docker exec $(docker ps -qf "ancestor=cassandra:4.1") cqlsh -e "describe keyspaces"; then
              break
            fi
            echo "Waiting for Cassandra..."
            sleep 5
          done

      - name: Create schema
        run: |
          docker cp ch-4/db/init.cql $(docker ps -qf "ancestor=cassandra:4.1"):/init.cql
          docker exec $(docker ps -qf "ancestor=cassandra:4.1") cqlsh -f /init.cql

      - name: Run unit tests
        working-directory: ./ch-4
        run: go test -v ./...

      - name: Run Go vet
        working-directory: ./ch-4
        run: go vet ./...

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2

      - name: Run golangci-lint
        working-directory: ./ch-4
        run: $(go env GOPATH)/bin/golangci-lint run ./...

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./ch-4
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/goanalytics:latest
